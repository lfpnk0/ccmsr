<html>
<head>
 <link href='assets/base.css' rel='stylesheet' type='text/css'>
<style>
table{
 width:225px;
 border-collapse: collapse;
}
td{
 border: 1px solid black;
 border-top: 0px;
 text-align:center;
 padding-top: 0.5em;
 padding-bottom: 0.5em;
 cursor: pointer;
}
.alt{
 background-color:lightgray;
}
</style>
</head>
<body>
 <table class="titleBar">
  <tr>
   <td onclick="settings()"><img class="icon" src="ico/settings.png"></td>
   <td class="title" onclick="collapse()">QuickKeys</td>
   <td onclick="captionNet()"><img class="icon" src="ico/headset.png"></td>
  </tr>
 </table>
 <div id="content" style="display:block;">
  <table>
   <tr>
    <td onclick="send('{ENTER}{f1}')">Ring</td>
    <td onclick="send('{ENTER}{f2}{ENTER}')">New</td>
    <td onclick="send('{ENTER}{f3}{ENTER}')">Auto</td>
    <td onclick="send('{ENTER}{f4}')">Ans</td>
   </tr>
  </table>
  <table class="alt">
   <tr>
    <td onclick="send('{ENTER}bsyln')">bsyln</td>
    <td onclick="send('{ENTER}dltn')">dltn</td>
    <td onclick="send('{ENTER}fxtn')">fxtn</td>
   </tr>
  </table>
  <table>
   <tr>
    <td onclick="send(' cryg ')">cryg</td>
    <td onclick="send(' lgh ')">lgh</td>
    <td onclick="send('sgh ')">sgh</td>
    <td onclick="send('gspg ')">gspg</td>
   </tr>
  </table>
  <table class="alt">
   <tr>
    <td onclick="send(' cg ')">cg</td>
    <td onclick="send(' snz ')">snz</td>
    <td onclick="send(' ywn ')">ywn</td>
   </tr>
  </table>
  <table>
   <tr>
    <td onclick="send(' interbkd ')">interbkd</td>
    <td onclick="send(' inaud ')">inaud</td>
    <td onclick="send(' nnout ')">nnout</td>
    <td onclick="send(' sttc ')">sttc</td>
   </tr>
  </table>
  <table class="alt">
   <tr>
    <td onclick="sln(this,'set');">sln</td>
    <td onclick="send('{ENTER}clhd')">clhd</td>
    <td onclick="send('{ENTER}mscply')">mscply</td>
   </tr>
  </table>
  <table>
   <tr>
    <td onclick="lang(this,'set')">lang</td>
    <td onclick="scap(this,'set')">scap</td>
    <td onclick="clear(this.parentNode)"><img class="icon" src="ico/del.png"></td>
   </tr>
  </table>
  <table>
   <tr>
    <td><input type="text" id="text" value="Uh-uh." /></td>
    <td width=40px onclick="send(document.getElementById('text').value)"><img class="icon" src="ico/go.png"></td>
   </tr>
  </table>
 </div>
 <div id="settings" style="display:none;">
  Settings
 </div>
 <script src="assets/base.js"></script>
 <script>
  window.parent.document.getElementById('qk').height = '420px'; //402 px
  qk = new Object();
  qk.shell = new ActiveXObject("WScript.Shell");
  qk.t = new Object();
  qk.t.sln = new Object();
  qk.t.sln.s = -1;
  qk.t.lang = new Object();
  qk.t.lang.s = -1;
  qk.t.scap = new Object();
  qk.t.scap.s = -1;
  function send(key){
   qk.shell.AppActivate('CaptionNet');
   qk.shell.SendKeys(key);
  }
  function captionNet(){
   qk.shell.exec('C:/Program Files/CaptionCall/CaptionNet/2.2.53/CaptionNet.exe');
  }
  function sln(el, action){
   if(action=='set'){
    if(qk.t.sln.s < 0){
     send('{ENTER}sln');
     el.innerHTML = '5:00';
     qk.t.sln.s = 300;
     qk.t.sln.i = setInterval(function(){
      qk.t.sln.s++;
      var s = ('0'+(qk.t.sln.s-(60*Math.floor(qk.t.sln.s/60)))).slice(-2);
      var m = Math.floor(qk.t.sln.s/60);
      el.innerHTML = m+':'+s;
      sln(el,'check');
     }, 1000);
    }
    else{
     if(qk.t.sln.i > 0){clearInterval(qk.t.sln.i);}
     el.innerHTML = 'sln';
     qk.t.sln.s = -1;
     el.style.backgroundColor = 'transparent';
    }
   }
   else{
    switch(qk.t.sln.s){
     case 240:
      el.style.backgroundColor = 'orange';
      break;
     case 0:
      el.style.backgroundColor = 'red';
      clearInterval(qk.t.sln.i);
      qk.t.sln.i = -1;
      break;
    }
   }
  }
  function lang(el){
   if(pk.t.lang.i < 0){
    send('{ENTER}olangcall');
    el.innerHTML = '10:00';
    qk.t.lang.s = 300;
    qk.t.lang.i = setInterval(function(){
     qk.t.lang.s++;
     var s = ('0'+(qk.t.lang.s-(60*Math.floor(qk.t.lang.s/60)))).slice(-2);
     var m = Math.floor(qk.t.lang.s/60);
     el.innerHTML = m+':'+s;
     lang(el);
    }, 1000);
   }
   else{
    switch(qk.t.lang.s){
     case 300:
      send('{ENTER}stndby');
      break;
     case 0:
      send('{ENTER}olang');
      el.style.backgroundColor = 'red';
      clearInterval(qk.t.lang.i);
      qk.t.sln.i = -1;
      break;
    }
   }
  }
  function scap(el){
   if(pk.t.scap.i < 0){
    switch(el.innerHTML){
     case 'scap':
      send('{ENTER}scapinit1{ENTER}scapinit2');
      el.innerHTML = '10:00';
      qk.t.scap.s = 90;
      qk.t.scap.i = setInterval(function(){
       qk.t.scap.s++;
       var s = ('0'+(qk.t.scap.s-(60*Math.floor(qk.t.scap.s/60)))).slice(-2);
       var m = Math.floor(qk.t.scap.s/60);
       el.innerHTML = m+':'+s;
       scap(el);
      }, 1000);
      break;
     case 'not':
      send('{ENTER}scapnot');
      break;
     case 'canc':
      send('{ENTER}scapcanc');
    }
   }
   else{
    switch(qk.t.scap.s){
     case 60:
       el.innerHTML
      break;
     case 0:
      break;
    }
   }
  }
 </script>
</body>
</html>
